# install docker (docker desktop) on the system & run the commands.

# Docker Containerizes a Process.
Docker uses Linux containerization features.

# download image from hub.docker.com
C:\Users\test>docker pull alpine sh
-it (--interactive --terminal), sh (shell)

# docker run cmd extracts contents of an image(zip/tar file) to create a container.
C:\Users\test>docker run -it alpine sh

# list all docker processes & their statuses.
C:\Users\test>docker ps -a

# Connecting to a running container using exec cmd.
C:\Users\test>docker exec -it 44b72e8afcf1 sh

# Running mysql container & connecting to it to do SQL operations.
C:\Users\test>docker run -it -d -e MYSQL_ROOT_PASSWORD=secret mysql
-d (detached mode for process), -e (environment variables)

# passing external file system reference to a jdk container using -v(volume) option.
PS C:\Users\test> docker run --rm -it -v ${PWD}:/my-folder/ZZ-Temp openjdk sh
-v (volume), --rm (remove container when stopped)

# Starting nginx web server & mapping host port to container port using -p(port) option.
PS C:\Users\test> docker run -p 8080:80 nginx
-p (mapping host & container ports)

# start nginx web server, expose the port & copy web content to nginx's /usr/share/nginx/html folder (it expects here).
PS C:\Users\test\my-folder\ZZ-Temp> docker run -p 8080:80 -v ${PWD}:/usr/share/nginx/html nginx

# Create a Docker image using the Dockerfile & the build cmd. -t (tag name) & "." is the current directory where to find the Dockedfile.
PS C:\my-docker-barebones> docker build -t my-docker-barebones-image .
-t (tag name),  . is the current directory where to find the Dockedfile

# build command
./mvnw spring-boot:build-image

# list all docker images downloaded to PC.
PS C:\my-docker-barebones> docker images

# push from local to remote docker repo.
PS C:\my-springboot-basics> docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: g1rocks
Password:
Login Succeeded

Logging in with your password grants your terminal complete access to your account.
For better security, log in with a limited-privilege personal access token. Learn more at https://docs.docker.com/go/access-tokens/

PS C:\my-springboot-basics> docker tag my-springboot-basics:0.0.1-SNAPSHOT g1rocks/my-springboot-basics:0.0.1-SNAPSHOT
PS C:\my-springboot-basics> docker push g1rocks/my-springboot-basics:0.0.1-SNAPSHOT
The push refers to repository [docker.io/g1rocks/my-springboot-basics]
1dc94a70dbaa: Preparing
e94cf9a9bed9: Preparing
200fe3387305: Pushed
30a03cb7ff3f: Mounted from g1rocks/my-docker-learn
0.0.1-SNAPSHOT: digest: sha256:79bbacad57e66ae4eb44505e36d4b279a3a6e27302704df47ea229e0c0d6ba66 size: 5327




# Dockerfile commands:
FROM <image-name>
RUN <command'(s)>
MAINTAINER <project/dockerfile maintainer name/email>
ENV <environment variables -> key value pairs>
EXPOSE <port number>
WORKDIR <docker container base work directory>
COPY <source> <destination>
CMD <>
ENTRYPOINT <>


